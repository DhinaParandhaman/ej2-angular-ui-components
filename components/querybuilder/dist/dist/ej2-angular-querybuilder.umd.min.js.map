{"version":3,"file":"ej2-angular-querybuilder.umd.min.js","sources":["~/@syncfusion/ej2-angular-querybuilder/src/query-builder/columns.directive.ts","~/@syncfusion/ej2-angular-querybuilder/src/query-builder/querybuilder.component.ts","~/@syncfusion/ej2-angular-querybuilder/src/query-builder/querybuilder.module.ts","~/@syncfusion/ej2-angular-querybuilder/src/query-builder/querybuilder-all.module.ts"],"sourcesContent":["import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['category', 'field', 'format', 'label', 'operators', 'ruleTemplate', 'step', 'template', 'type', 'validation', 'value', 'values'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * `e-column` directive represent a column of the Angular QueryBuilder. \n * It must be contained in a QueryBuilder component(`ejs-querybuilder`). \n * ```html\n * <ejs-querybuilder [dataSource]='data'> \n *   <e-columns>\n *    <e-column field='ID' label='ID' type='number'></e-column>\n *    <e-column field='Date' label='Date' type='date' format='dd/MM/yyyy'></e-column>\n *   </e-columns>\n * </ejs-querybuilder>\n * ```\n */\nexport class ColumnDirective extends ComplexBase<ColumnDirective> {\npublic directivePropList: any;\n/**\n * Specifies the types in columns field\n * \\@default null\n */\npublic type: any;\n/**\n * Specifies the category for columns.\n * \\@default null\n */\npublic category: any;\n/**\n * Specifies the fields in columns.\n * \\@default null\n */\npublic field: any;\n/**\n * Specifies the date format for columns.\n * \\@asptype string\n * \\@blazortype string\n * \\@default null\n */\npublic format: any;\n/**\n * Specifies the labels name in columns\n * \\@default null\n */\npublic label: any;\n/**\n * Specifies the operators in columns.\n * \\@default null\n */\npublic operators: any;\n/**\n * Specifies the step value(numeric textbox) for columns.\n * \\@default null\n */\npublic step: any;\n/**\n * Specifies the template for value field such as slider or any other widgets.\n * \\@default null\n */\npublic template: any;\n/**\n * Specifies the validation for columns (text, number and date).\n * \\@default { isRequired: true , min: 0, max: Number.MAX_VALUE }\n */\npublic validation: any;\n/**\n * Specifies the default value for columns.\n * \\@default null\n */\npublic value: any;\n/**\n * Specifies the values in columns or bind the values from sub controls.\n * \\@default null\n */\npublic values: any;\n/**\n * Specifies the rule template for the field with any other widgets.\n */\n@Template()\n    public ruleTemplate: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-querybuilder>e-columns>e-column',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ruleTemplate': [{ type: ContentChild, args: ['ruleTemplate', ] },],\n};\n}\n\nfunction ColumnDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnDirective.ctorParameters;\n/** @type {?} */\nColumnDirective.propDecorators;\n/** @type {?} */\nColumnDirective.prototype.directivePropList;\n/**\n * Specifies the types in columns field\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.type;\n/**\n * Specifies the category for columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.category;\n/**\n * Specifies the fields in columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.field;\n/**\n * Specifies the date format for columns.\n * \\@asptype string\n * \\@blazortype string\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.format;\n/**\n * Specifies the labels name in columns\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.label;\n/**\n * Specifies the operators in columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.operators;\n/**\n * Specifies the step value(numeric textbox) for columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.step;\n/**\n * Specifies the template for value field such as slider or any other widgets.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.template;\n/**\n * Specifies the validation for columns (text, number and date).\n * \\@default { isRequired: true , min: 0, max: Number.MAX_VALUE }\n * @type {?}\n */\nColumnDirective.prototype.validation;\n/**\n * Specifies the default value for columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.value;\n/**\n * Specifies the values in columns or bind the values from sub controls.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.values;\n/**\n * Specifies the rule template for the field with any other widgets.\n * @type {?}\n */\nColumnDirective.prototype.ruleTemplate;\n/** @type {?} */\nColumnDirective.prototype.viewContainerRef;\n}\n\n/**\n * Column Array Directive\n */\nexport class ColumnsDirective extends ArrayBase<ColumnsDirective> {\nconstructor() {\n        super('columns');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-querybuilder>e-columns',\n    queries: {\n        children: new ContentChildren(ColumnDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColumnsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { QueryBuilder } from '@syncfusion/ej2-querybuilder';\n\nimport { ColumnsDirective } from './columns.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['allowValidation','columns','cssClass','dataSource','displayMode','enableNotCondition','enablePersistence','enableRtl','height','immediateModeDelay','locale','matchCase','maxGroupCount','readonly','rule','showButtons','sortDirection','summaryView','width'];\nexport const /** @type {?} */ outputs: string[] = ['actionBegin','beforeChange','change','created','ruleChange'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * Represents the EJ2 Angular QueryBuilder Component.\n * ```html\n * <ejs-querybuilder></ejs-querybuilder>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class QueryBuilderComponent extends QueryBuilder implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\npublic childColumns: QueryList<ColumnsDirective>;\npublic tags: string[] = ['columns'];\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childColumns;\n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-querybuilder',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childColumns: new ContentChild(ColumnsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\n}\n\nfunction QueryBuilderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryBuilderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nQueryBuilderComponent.ctorParameters;\n/** @type {?} */\nQueryBuilderComponent.prototype.context;\n/** @type {?} */\nQueryBuilderComponent.prototype.tagObjects;\n/** @type {?} */\nQueryBuilderComponent.prototype.childColumns;\n/** @type {?} */\nQueryBuilderComponent.prototype.tags;\n/** @type {?} */\nQueryBuilderComponent.prototype.registerEvents;\n/** @type {?} */\nQueryBuilderComponent.prototype.addTwoWay;\n/** @type {?} */\nQueryBuilderComponent.prototype.ngEle;\n/** @type {?} */\nQueryBuilderComponent.prototype.srenderer;\n/** @type {?} */\nQueryBuilderComponent.prototype.viewContainerRef;\n/** @type {?} */\nQueryBuilderComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { QueryBuilderComponent } from './querybuilder.component';\n/**\n * NgModule definition for the QueryBuilder component.\n */\nexport class QueryBuilderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        QueryBuilderComponent,\n        ColumnDirective,\n        ColumnsDirective\n    ],\n    exports: [\n        QueryBuilderComponent,\n        ColumnDirective,\n        ColumnsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction QueryBuilderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryBuilderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nQueryBuilderModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { QueryBuilderComponent } from './querybuilder.component';\nimport { QueryBuilderModule } from './querybuilder.module';\n/**\n * NgModule definition for the QueryBuilder component with providers.\n */\nexport class QueryBuilderAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, QueryBuilderModule],\n    exports: [\n        QueryBuilderModule\n    ],\n    providers:[\n        \n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction QueryBuilderAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryBuilderAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nQueryBuilderAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["input","outputs","ColumnDirective","_super","viewContainerRef","_this","call","this","setValue","registerEvents","directivePropList","__extends","ComplexBase","decorators","type","Directive","args","selector","inputs","queries","ctorParameters","ViewContainerRef","propDecorators","ruleTemplate","ContentChild","__decorate","Template","prototype","ColumnsDirective","ArrayBase","children","ContentChildren","twoWays","exports","QueryBuilderComponent","ngEle","srenderer","injector","tags","element","nativeElement","injectedModules","addTwoWay","context","ComponentBase","ngOnInit","ngAfterViewInit","ngOnDestroy","ngAfterContentChecked","tagObjects","instance","childColumns","QueryBuilder","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","Renderer2","Injector","ComponentMixins","__metadata","QueryBuilderModule","NgModule","imports","CommonModule","declarations","QueryBuilderAllModule","providers"],"mappings":"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"}
