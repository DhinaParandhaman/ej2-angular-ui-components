{"version":3,"file":"ej2-angular-querybuilder.js","sources":["~/@syncfusion/ej2-angular-querybuilder/ej2-angular-querybuilder.ts","~/@syncfusion/ej2-angular-querybuilder/src/query-builder/querybuilder-all.module.ts","~/@syncfusion/ej2-angular-querybuilder/src/query-builder/querybuilder.module.ts","~/@syncfusion/ej2-angular-querybuilder/src/query-builder/querybuilder.component.ts","~/@syncfusion/ej2-angular-querybuilder/src/query-builder/columns.directive.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {ColumnDirective,ColumnsDirective,QueryBuilderComponent,QueryBuilderModule,QueryBuilderAllModule,Columns,Rule,ShowButtons,FormatObject,DisplayMode,SortDirection,QueryBuilder,Level,TemplateColumn,Validation,ChangeEventArgs,RuleChangeEventArgs,ActionEventArgs,ColumnsModel,RuleModel,ShowButtonsModel,QueryBuilderModel} from './public_api';\n\nexport {inputs as ɵa,outputs as ɵb} from './src/query-builder/querybuilder.component';","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { QueryBuilderComponent } from './querybuilder.component';\nimport { QueryBuilderModule } from './querybuilder.module';\n/**\n * NgModule definition for the QueryBuilder component with providers.\n */\nexport class QueryBuilderAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, QueryBuilderModule],\n    exports: [\n        QueryBuilderModule\n    ],\n    providers:[\n        \n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction QueryBuilderAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryBuilderAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nQueryBuilderAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { QueryBuilderComponent } from './querybuilder.component';\n/**\n * NgModule definition for the QueryBuilder component.\n */\nexport class QueryBuilderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        QueryBuilderComponent,\n        ColumnDirective,\n        ColumnsDirective\n    ],\n    exports: [\n        QueryBuilderComponent,\n        ColumnDirective,\n        ColumnsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction QueryBuilderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryBuilderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nQueryBuilderModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { QueryBuilder } from '@syncfusion/ej2-querybuilder';\n\nimport { ColumnsDirective } from './columns.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['allowValidation','columns','cssClass','dataSource','displayMode','enableNotCondition','enablePersistence','enableRtl','height','immediateModeDelay','locale','matchCase','maxGroupCount','readonly','rule','separator','showButtons','sortDirection','summaryView','width'];\nexport const /** @type {?} */ outputs: string[] = ['actionBegin','beforeChange','change','created','ruleChange'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * Represents the EJ2 Angular QueryBuilder Component.\n * ```html\n * <ejs-querybuilder></ejs-querybuilder>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class QueryBuilderComponent extends QueryBuilder implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\npublic childColumns: QueryList<ColumnsDirective>;\npublic tags: string[] = ['columns'];\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childColumns;\n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-querybuilder',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childColumns: new ContentChild(ColumnsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\n}\n\nfunction QueryBuilderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryBuilderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nQueryBuilderComponent.ctorParameters;\n/** @type {?} */\nQueryBuilderComponent.prototype.context;\n/** @type {?} */\nQueryBuilderComponent.prototype.tagObjects;\n/** @type {?} */\nQueryBuilderComponent.prototype.childColumns;\n/** @type {?} */\nQueryBuilderComponent.prototype.tags;\n/** @type {?} */\nQueryBuilderComponent.prototype.registerEvents;\n/** @type {?} */\nQueryBuilderComponent.prototype.addTwoWay;\n/** @type {?} */\nQueryBuilderComponent.prototype.ngEle;\n/** @type {?} */\nQueryBuilderComponent.prototype.srenderer;\n/** @type {?} */\nQueryBuilderComponent.prototype.viewContainerRef;\n/** @type {?} */\nQueryBuilderComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['category', 'field', 'format', 'label', 'operators', 'ruleTemplate', 'step', 'template', 'type', 'validation', 'value', 'values'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * `e-column` directive represent a column of the Angular QueryBuilder. \n * It must be contained in a QueryBuilder component(`ejs-querybuilder`). \n * ```html\n * <ejs-querybuilder [dataSource]='data'> \n *   <e-columns>\n *    <e-column field='ID' label='ID' type='number'></e-column>\n *    <e-column field='Date' label='Date' type='date' format='dd/MM/yyyy'></e-column>\n *   </e-columns>\n * </ejs-querybuilder>\n * ```\n */\nexport class ColumnDirective extends ComplexBase<ColumnDirective> {\npublic directivePropList: any;\n/**\n * Specifies the types in columns field\n * \\@default null\n */\npublic type: any;\n/**\n * Specifies the category for columns.\n * \\@default null\n */\npublic category: any;\n/**\n * Specifies the fields in columns.\n * \\@default null\n */\npublic field: any;\n/**\n * Specifies the date format for columns.\n * \\@asptype string\n * \\@blazortype string\n * \\@default null\n */\npublic format: any;\n/**\n * Specifies the labels name in columns\n * \\@default null\n */\npublic label: any;\n/**\n * Specifies the operators in columns.\n * \\@default null\n */\npublic operators: any;\n/**\n * Specifies the step value(numeric textbox) for columns.\n * \\@default null\n */\npublic step: any;\n/**\n * Specifies the template for value field such as slider or any other widgets.\n * \\@default null\n */\npublic template: any;\n/**\n * Specifies the validation for columns (text, number and date).\n * \\@default { isRequired: true , min: 0, max: Number.MAX_VALUE }\n */\npublic validation: any;\n/**\n * Specifies the default value for columns.\n * \\@default null\n */\npublic value: any;\n/**\n * Specifies the values in columns or bind the values from sub controls.\n * \\@default null\n */\npublic values: any;\n/**\n * Specifies the rule template for the field with any other widgets.\n */\n@Template()\n    public ruleTemplate: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-querybuilder>e-columns>e-column',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ruleTemplate': [{ type: ContentChild, args: ['ruleTemplate', ] },],\n};\n}\n\nfunction ColumnDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnDirective.ctorParameters;\n/** @type {?} */\nColumnDirective.propDecorators;\n/** @type {?} */\nColumnDirective.prototype.directivePropList;\n/**\n * Specifies the types in columns field\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.type;\n/**\n * Specifies the category for columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.category;\n/**\n * Specifies the fields in columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.field;\n/**\n * Specifies the date format for columns.\n * \\@asptype string\n * \\@blazortype string\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.format;\n/**\n * Specifies the labels name in columns\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.label;\n/**\n * Specifies the operators in columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.operators;\n/**\n * Specifies the step value(numeric textbox) for columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.step;\n/**\n * Specifies the template for value field such as slider or any other widgets.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.template;\n/**\n * Specifies the validation for columns (text, number and date).\n * \\@default { isRequired: true , min: 0, max: Number.MAX_VALUE }\n * @type {?}\n */\nColumnDirective.prototype.validation;\n/**\n * Specifies the default value for columns.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.value;\n/**\n * Specifies the values in columns or bind the values from sub controls.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.values;\n/**\n * Specifies the rule template for the field with any other widgets.\n * @type {?}\n */\nColumnDirective.prototype.ruleTemplate;\n/** @type {?} */\nColumnDirective.prototype.viewContainerRef;\n}\n\n/**\n * Column Array Directive\n */\nexport class ColumnsDirective extends ArrayBase<ColumnsDirective> {\nconstructor() {\n        super('columns');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-querybuilder>e-columns',\n    queries: {\n        children: new ContentChildren(ColumnDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColumnsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["__metadata","__decorate","outputs"],"mappings":"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"}
